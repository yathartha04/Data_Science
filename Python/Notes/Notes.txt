Programming language-Language in which programmer use to give command or perform a task
HLL-Human level language (The language that is understood by the human c,c++)
MLL- Machine level language (The language that is understood by the machines 0,1)
ALL-Assembly level language (The language that is between high level language and human level language used to code in microprocessor)
IDE-Integrated development language (VScode)
PascalCase-used to define class
camelCase-used to define function
snake_case-used to define variables
kebab-case-used to define variable
Comments-The comments are the lines in the file that are ignored by the IDE. # symbol is used.
Type Casting-The process of conversion from one data type to other data type
Data types in python:
integer-whole number from 0 to infinite (1,0,4)
floating value-decimal value (0.1, 2.7)
string-The values that are wrapped with quotation mark and the values having combination of alphabet, number and special character
Boolean data type- rither true or false
mutuable-the object can be changed directly
non mutable-the object cannot be changed directly, it creates new object
operators- operators are the symbols that performs specific operation (+,-,/,**) logical operator (and,or,not)
List-List is a data type in python that can store multiple values of different data types. We use [] to define list. 
append()- adds the element at the end of the list
count()-counts the no. of element of the list
index()-returns the index of the element
indexing-always starts from 0, print(variable[index number])
slicing-creates a new subset list from the original list(the end value is always exclusive) 0 this is start index num:9 this is end index num
tuple-tuple is a immutable data type in python that wraps the element in ()
set data type- set data type is also a mutable data type enclosed with {}. the index in set datatype is not fixed
dictionary-dictionary is a mutable data type where the data are stored in key value pair. we use{} to define the dictionary
conditional statement-the statements that are executed only if the condition is satisfied. they are(if else, if elif....else, loops, match)
if else-the if block is executed only if the condition is true, if false, else block code is executed
elif ladder- we use elif keyword. we use elif ladder to check for the multiple condition
loops-loop is a technique to execute the same block of code repeatedly.in python we have 2 types of loop(for,while)
syntax for for loop:
for variable(iterator) in iterables:
code to be executed
we use for loop when we already know the statr point and end point
iterator is simply a variable that is used in loop to access each element of the iterable
iterable is a group data type where loop runs
interation is a single time that a loop runs
Range syntax: range(start_value, end_value, step)
range is exclusive so it doesnot take the end value


syntax for while loop:
while condition:
code to be executed
we use while loop when we dont know the starting and ending point
while loop has a defect, you may fall into infinite loop trap in while loop
break- breaks and exit from the current loop
continue-breaks the current iteration but continues the loop


######21 aug####
functions
we create a function and add the code that should be executed again and again call the function whenever we need it
we use 'def' keyword to define  function
example of a simple function
syntax:
def function_name():
    block of code

argument and parameter
argument-argument are the values we pass to the function when calling the function
parameter-parameter are the variabes that are used during the function definition to receivr the argument

positional arguments-the parameter takes the argument according to the position (args)
key word argument- (key:value)pair (kwargs)

global variables & local variables
the variables that are defined globally outside in 
the variables that are defined inside the 

#22 aug
types of function
built in function-the function that has been already created by python
user defined function-the function that are created by user 

list comprehension-the programical way of adding values to the list


other functions-
1.lambda function-it is a mini function written in one single line
xmpl: add = lambda x, y : x + you
      print(add(2,3))

2.MAP function-
num = [3,4,5,6]
squares = list(map(lambda x: x + 2, num))
print(squares)

3.filters-
numbers = [1,2,3,4,5]
even_num = list(filter(lambda x: x % 2 == 0, num))
print(even_num)

4.reduce function
from functools import reduce
num = [1,2,3,4]
sum_all = reduce(lambda x, y: x*y, num)
print(sum_all)

5.zip function
